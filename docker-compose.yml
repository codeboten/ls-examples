version: "3.7"
services:
    go-server:
        container_name: go-server
        build: ./go/opentracing/server
        networks:
            - demo
        env_file:
            - .env
        environment:
            - LIGHTSTEP_COMPONENT_NAME=demo-server-go
            - LIGHTSTEP_SERVICE_VERSION=5
        stop_grace_period: 1s
    go-client:
        container_name: go-client
        build: ./go/opentracing/client
        networks:
            - demo
        depends_on:
            - go-server
        env_file:
            - .env
        environment:
            - LIGHTSTEP_COMPONENT_NAME=demo-client-go
            - LIGHTSTEP_SERVICE_VERSION=1.2.7
            - TARGET_URL=http://go-server:8081
        stop_grace_period: 1s
    go-server-otel:
        container_name: go-server-otel
        build: ./go/opentelemetry/server
        networks:
            - demo
        env_file:
            - .env
        environment:
            - LIGHTSTEP_COMPONENT_NAME=demo-server-go-otel
            - LIGHTSTEP_SERVICE_VERSION=5
        stop_grace_period: 1s
    go-client-otel:
        container_name: go-client-otel
        build: ./go/opentelemetry/client
        networks:
            - demo
        depends_on:
            - go-server-otel
        env_file:
            - .env
        environment:
            - LIGHTSTEP_COMPONENT_NAME=demo-client-go-otel
            - LIGHTSTEP_SERVICE_VERSION=1.2.7
            - TARGET_URL=http://go-server-otel:8081
        stop_grace_period: 1s
    py-client:
        container_name: py-client
        build: ./python/client
        networks:
            - demo
        depends_on:
            - py-server
        env_file:
            - .env
        environment:
            - LIGHTSTEP_COMPONENT_NAME=demo-client-py
            - LIGHTSTEP_SERVICE_VERSION=1.2.1
            - TARGET_URL=http://py-server:5000
        stop_grace_period: 1s
    py-otel-client:
        container_name: py-otel-client
        build:
            context: ./python/client
            dockerfile: Dockerfile.noinstrumentation.otel
        networks:
            - demo
        depends_on:
            - py-otel-server
        env_file:
            - .env
        environment:
            - OPENTELEMETRY_INSTRUMENTATION=1
            - OPENTELEMETRY_EXPORTER=collector
            - COLLECTOR_ENDPOINT=otel-collector:55678
            - OPENTELEMETRY_PYTHON_TRACER_PROVIDER=sdk_tracer_provider
            - LIGHTSTEP_SERVICE_NAME=manual-instrumentation-client-py
            - LIGHTSTEP_SERVICE_VERSION=1.2.6
            - TARGET_URL=http://py-otel-server:5000
        stop_grace_period: 1s
    py-server:
        container_name: py-server
        build: ./python/server
        networks:
            - demo
        env_file:
            - .env
        environment:
            - LIGHTSTEP_COMPONENT_NAME=demo-server-py
            - LIGHTSTEP_SERVICE_VERSION=0.2.2
        stop_grace_period: 1s
    py-otel-server:
        container_name: py-otel-server
        build:
            context: ./python/server
            dockerfile: Dockerfile.noinstrumentation.otel
        networks:
            - demo
        env_file:
            - .env
        environment:
            - OPENTELEMETRY_INSTRUMENTATION=1
            - OPENTELEMETRY_EXPORTER=collector
            - COLLECTOR_ENDPOINT=otel-collector:55678
            - OPENTELEMETRY_PYTHON_TRACER_PROVIDER=sdk_tracer_provider
            - LIGHTSTEP_SERVICE_NAME=manual-instrumentation-server-py
            - LIGHTSTEP_SERVICE_VERSION=0.2.7
        stop_grace_period: 1s
    py-collector-client:
        container_name: py-collector-client
        build:
            context: ./python/client
            dockerfile: Dockerfile.otel
        networks:
            - demo
        depends_on:
            - py-collector-server
            - otel-collector
        env_file:
            - .env
        environment:
            - OPENTELEMETRY_INSTRUMENTATION=1
            - OPENTELEMETRY_EXPORTER=collector
            - COLLECTOR_ENDPOINT=otel-collector:55678
            - OPENTELEMETRY_PYTHON_tracer_provider=sdk_tracer_provider
            - LIGHTSTEP_SERVICE_NAME=auto-instrumentation-client-py
            - LIGHTSTEP_SERVICE_VERSION=1.2.9
            - TARGET_URL=http://py-collector-server:5000
        stop_grace_period: 1s
    py-collector-server:
        container_name: py-collector-server
        build:
            context: ./python/server
            dockerfile: Dockerfile.otel
        networks:
            - demo
        depends_on:
            - otel-collector
        env_file:
            - .env
        environment:
            - OPENTELEMETRY_INSTRUMENTATION=1
            - OPENTELEMETRY_EXPORTER=collector
            - COLLECTOR_ENDPOINT=otel-collector:55678
            - OPENTELEMETRY_PYTHON_tracer_provider=sdk_tracer_provider
            - LIGHTSTEP_SERVICE_NAME=auto-instrumentation-server-py
            - LIGHTSTEP_SERVICE_VERSION=0.2.8
        stop_grace_period: 1s
    js-server:
        container_name: js-server
        build: ./js/server
        networks:
            - demo
        env_file:
            - .env
        environment:
            - LIGHTSTEP_COMPONENT_NAME=ls-trace-js-server
        stop_grace_period: 1s
    js-client:
        container_name: js-client
        build: ./js/client
        networks:
            - demo
        depends_on:
            - js-server
        env_file:
            - .env
        environment:
            - LIGHTSTEP_COMPONENT_NAME=ls-trace-js-client
            - TARGET_URL=http://js-server:8080/ping
        stop_grace_period: 1s
    java-server:
        container_name: java-server
        build: ./java/server
        networks:
            - demo
        env_file:
            - .env
        environment:
            - LIGHTSTEP_COMPONENT_NAME=demo-server-java
            - LIGHTSTEP_SERVICE_VERSION=4.3.2
        stop_grace_period: 1s
    java-client:
        container_name: java-client
        build: ./java/client
        networks:
            - demo
        depends_on:
            - java-server
        env_file:
            - .env
        environment:
            - LIGHTSTEP_COMPONENT_NAME=demo-client-java
            - LIGHTSTEP_SERVICE_VERSION=3.2.1
            - TARGET_URL=http://java-server:8083
        stop_grace_period: 1s
    mongo:
        container_name: mongo
        image: mongo:latest
        networks:
            - demo
        stop_grace_period: 1s
        ports:
            - 0.0.0.0:27017:27017
    mysql:
        container_name: mysql
        image: mysql:5.7
        restart: always
        environment:
            MYSQL_USER: testuser
            MYSQL_PASSWORD: testpassword
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
            MYSQL_DATABASE: opentelemetry-tests
        networks:
            - demo
        stop_grace_period: 1s
    postgres:
        container_name: postgres
        image: postgres:10.5-alpine
        environment:
            POSTGRES_USER: testuser
            POSTGRES_PASSWORD: testpassword
            POSTGRES_DB: opentelemetry-tests
        networks:
            - demo
        ports:
            - 0.0.0.0:5432:5432
        stop_grace_period: 1s
    redis:
        container_name: redis
        image: redis:4.0-alpine
        networks:
            - demo
        ports:
            - 0.0.0.0:6379:6379
        stop_grace_period: 1s
    otel-collector:
        container_name: otel-collector
        image: otel/opentelemetry-collector-contrib:latest
        command: ["--config=/conf/collector-config.yaml", "--log-level=DEBUG"]
        networks:
            - demo
        volumes:
            - ./collector/collector-config.yaml:/conf/collector-config.yaml
        ports:
            - "8889:8889"   # Prometheus exporter metrics
            - "55678:55678" # OpenCensus receiver
networks:
    demo:
